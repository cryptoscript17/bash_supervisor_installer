; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Quotes around values are not supported, except in the case of
;    the environment= options as shown below.
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".
;  - Command will be truncated if it looks like a config file comment, e.g.
;    "command=bash -c 'foo ; bar'" will truncate to "command=bash -c 'foo ".
;
; Warning:
;  Paths throughout this example file use /tmp because it is available on most
;  systems.  You will likely need to change these to locations more appropriate
;  for your system.  Some systems periodically delete older files in /tmp.
;  Notably, if the socket file defined in the [unix_http_server] section below
;  is deleted, supervisorctl will be unable to connect to supervisord.

[unix_http_server]
file=/usr/local/temp/supervisor.sock  ; the path to the socket file
chmod=0700                 ; socket file mode (default 0700)
username=docker              ; default is no username (open server)
password=123               ; default is no password (open server)
;chown=nobody:nogroup       ; socket file uid:gid owner

; Security Warning:
;  The inet HTTP server is not enabled by default.  The inet HTTP server is
;  enabled by uncommenting the [inet_http_server] section below.  The inet
;  HTTP server is intended for use within a trusted environment only.  It
;  should only be bound to localhost or only accessible from within an
;  isolated, trusted network.  The inet HTTP server does not support any
;  form of encryption.  The inet HTTP server does not use authentication
;  by default (see the username= and password= options to add authentication).
;  Never expose the inet HTTP server to the public internet.

[inet_http_server]         ; inet (TCP) server disabled by default
port=*:9002        ; ip_address:port specifier, *:port for all iface
username=docker              ; default is no username (open server)
password=123               ; default is no password (open server)

[supervisord]
user=root
pidfile=/usr/local/temp/supervisord.pid
logfile=/usr/local/temp/supervisord.log
loglevel=info
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
nodaemon=true               ; start in foreground if true; default false
silent=false                 ; no logs to stdout if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
;logfile=/var/log/supervisord_main.log ; main log file; default $CWD/supervisord.log
;loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/var/run/supervisord.pid ; supervisord pidfile; default supervisord.pid
;umask=022                   ; process file creation umask; default 022
;user=daemon            ; setuid to this UNIX account at startup; recommended if root
;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
directory=/usr/local              ; default is not to cd during start
;nocleanup=true              ; don't clean up tempfiles at start; default false
childlogdir=/usr/local/temp            ; 'AUTO' child log dir, default $TEMP
;environment=KEY="value"     ; key value pairs to add to environment
;strip_ansi=false            ; strip ansi escape codes in logs; def. false

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://localhost:9002 ; use an http:// url to specify an inet socket
username=docker              ; should be same as in [*_http_server] if set
password=123                ; should be same as in [*_http_server] if set
prompt=supervisor         ; cmd line prompt (default "supervisor")
history_file=~/.sc_history  ; use readline history if available

[program:app_01]
priority=10
directory=/usr/local/app_01
command=python -u main.py "semos"
stderr_logfile=/usr/local/app_01/temp/app_01_err.log
stdout_logfile=/usr/local/app_01/temp/app_01_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=false
startsecs=20


[program:app_02]
priority=10
directory=/usr/local/app_02
command=python -u main.py "yadrovo"
stderr_logfile=/usr/local/app_02/temp/app_02_err.log
stdout_logfile=/usr/local/app_02/temp/app_02_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=false
startsecs=20


[program:app_03]
priority=10
directory=/usr/local/app_03
command=python -u main.py "odintsovo"
stderr_logfile=/usr/local/app_03/temp/app_03_err.log
stdout_logfile=/usr/local/app_03/temp/app_03_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=false
startsecs=20


[program:app_04]
priority=10
directory=/usr/local/app_04
command=python -u main.py "proxy"
stderr_logfile=/usr/local/app_04/temp/app_04_err.log
stdout_logfile=/usr/local/app_04/temp/app_04_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=false
startsecs=20


[program:app_05]
priority=10
directory=/usr/local/app_05
command=python -u main.py "moem_bot"
stderr_logfile=/usr/local/app_05/temp/app_05_err.log
stdout_logfile=/usr/local/app_05/temp/app_05_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=false
autorestart=false
startsecs=20


[program:app_06]
priority=10
directory=/usr/local/app_06
command=python -u main.py "mskem"
stderr_logfile=/usr/local/app_06/temp/app_06_err.log
stdout_logfile=/usr/local/app_06/temp/app_06_out.log
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
autostart=true
autorestart=false
startsecs=20


[group:parser]
programs=app_01,app_02,app_03,app_06
priority=5
